{:paths ["src" "resources"]

 :deps {org.clojure/clojure {:mvn/version "1.8.0"}
        org.clojure/tools.reader {:mvn/version "1.3.6"}}

 :aliases {;;
           ;; Clojure versions we support
           ;;
           :1.8 {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}}
           :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
           :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}}

           ;;
           ;; ClojureScript version we test with (and support)
           ;;
           :cljs {:extra-deps {org.clojure/clojurescript {:mvn/version "1.10.893"}}}

           ;;
           ;; Linting
           ;;
           :lint-cache {:replace-paths ["src"]} ;; when building classpath we want to exclude resources
                                                ;; so we do not pick up our own clj-kondo config exports
           :clj-kondo {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2021.10.19"}}
                       :override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                       :main-opts ["-m" "clj-kondo.main"]}

           :eastwood {:extra-deps {jonase/eastwood {:mvn/version "0.9.9"}}
                      :main-opts ["-m" "eastwood.lint" {:source-paths ["src"]
                                                        :test-paths ["test"]
                                                        :add-linters [:performance]
                                                        :ignored-faults {:deprecations {rewrite-clj.regression-test true
                                                                                        rewrite-clj.zip.whitespace-test true}}}]}

           ;;
           ;; Test support
           ;;

           :test-common {:extra-deps {org.clojure/test.check {:mvn/version "1.1.0"}}
                         :extra-paths ["test"]}

           :test-isolated {:extra-paths ["test-isolated"]}

           ;; document block testing
           :test-doc-blocks {:replace-deps {org.clojure/clojure {:mvn/version "1.10.3"}
                                            com.github.lread/test-doc-blocks  {:mvn/version "1.0.166-alpha"}}
                             :replace-paths []
                             :ns-default lread.test-doc-blocks
                             :exec-args {:docs ["doc/01-user-guide.adoc"
                                                "doc/design/01-merging-rewrite-clj-and-rewrite-cljs.adoc"
                                                "doc/design/namespaced-elements.adoc"
                                                "src/rewrite_clj/node.cljc"]}}

           :test-docs {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                       :extra-paths ["target/test-doc-blocks/test"]}

           ;; kaocha for testing clojure versions>= v1.9
           :kaocha {:extra-deps {lambdaisland/kaocha {:mvn/version "1.60.945"}
                                 lambdaisland/kaocha-junit-xml {:mvn/version "0.0.76"}
                                 lambdaisland/kaocha-cloverage {:mvn/version "1.0.75"}}
                    :main-opts ["-m" "kaocha.runner"]}

           ;; cognitect test-runner for testing clojure < v1.9
           ;; (we prefer kaocha but it requires a min Clojure version of 1.9)
           :clj-test-runner {:extra-deps {io.github.cognitect-labs/test-runner
                                          {:git/tag "v0.5.0" :git/sha "b3fd0d2"}}
                             :main-opts ["-m" "cognitect.test-runner"]}

           ;; figwheel for clojurescript testing during dev
           :fig-test {:extra-deps {com.bhauman/figwheel-main {:mvn/version "0.2.15-SNAPSHOT"}}
                      :override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                      :extra-paths ["target" "test"]
                      :main-opts ["-m" "figwheel.main" "-b" "fig" "-r"]}

           :cljs-test {:extra-deps {olical/cljs-test-runner {:mvn/version "3.8.0"}}
                       :extra-paths ["test"]
                       :main-opts ["-m" "cljs-test-runner.main"]}

           ;; planck for Self-Hosted ClojureScript
           :planck-test {:extra-paths ["target/cljsbuild/test/planck-none/gen"]}

           ;;
           ;; General script deps
           ;;
           :script {:extra-paths ["script"]
                    :override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                    :extra-deps {org.clojure/tools.namespace {:mvn/version "1.1.0"}
                                 cli-matic/cli-matic {:mvn/version "0.4.3"}}}

           :apply-import-vars {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                               :extra-deps {metosin/malli {:mvn/version "0.6.2"}
                                            io.aviso/pretty {:mvn/version "1.1"}}
                               :ns-default lread.apply-import-vars}

           ;;
           ;; Running tests under Graal
           ;;
           ;; We have two main Graal scenarios:
           ;; graal:sci-test - interpret tests via sci over natively compiled rewrite-clj
           ;; graal:native-test - natively compile src and tests and run

           :graal {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                   :extra-deps {com.github.clj-easy/graal-build-time {:mvn/version "0.1.4"}}}

           :sci-test {:extra-paths ["target/generated/sci-test/src"]
                      :extra-deps {lread/sci-test {:git/url "https://github.com/lread/sci-test.git"
                                                   :sha "2af0994d7b4554be08c38f166400fc79f1c28b3e"}}}

           :native-test {:extra-paths ["target/generated/graal"]}

           ;; usage -M:sci-test:gen-reflection
           :gen-reflection {:main-opts ["-m" "sci-test.generate-reflection-file"]}

           ;;
           ;; Document rewrite-clj* differences
           ;;
           :diff-apis {:extra-paths ["script/resources"]
                       :extra-deps {lread/diff-apis {:git/url "https://github.com/lread/diff-apis"
                                                     :sha "cd8096e0b5e0c0ea4850cb9eafe2d085d8912442"}}
                       :main-opts ["-m" "diff-apis.main" "projects"]}

           ;;
           ;; Deployment
           ;;
           :build {:deps {io.github.clojure/tools.build {:git/tag "v0.6.8" :git/sha "d79ae84"}
                          io.github.slipset/deps-deploy {:sha "9b8db1f57722d19cf92de57ac7db28d71a915bcf"}
                          ;; TODO: switch back to io.github.camsaul after https://github.com/camsaul/whitespace-linter/pull/8 merged
                          io.github.lread/whitespace-linter {:sha "a5b5561ce4d199db54917390695449d9c59c38b6"}}
                   :ns-default build}

           ;;
           ;; Maintenance support
           ;;
           :outdated {:extra-deps {com.github.liquidz/antq {:mvn/version "1.3.0"}
                                   org.slf4j/slf4j-simple {:mvn/version "1.7.32"} ;; to rid ourselves of logger warnings
                                   }
                      :override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}
                      :main-opts ["-m" "antq.core"
                                  "--exclude=lambdaisland/kaocha@1.0.829" ;; https://github.com/lambdaisland/kaocha/issues/208
                                  "--exclude=com.bhauman/figwheel-main@0.2.15" ;; deployment was botched, some components missing
                                  ]}}}
